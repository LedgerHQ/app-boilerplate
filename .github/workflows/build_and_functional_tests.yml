name: Build and run functional tests using ragger through reusable workflow

# This workflow will build the app and then run functional tests using the Ragger framework upon Speculos emulation.
# It calls a reusable workflow developed by Ledger's internal developer team to build the application and upload the
# resulting binaries.
# It then calls another reusable workflow to run the Ragger tests on the compiled application binary.
#
# The build part of this workflow is mandatory, this ensures that the app will be deployable in the Ledger App Store.
# While the test part of this workflow is optional, having functional testing on your application is mandatory and this workflow and
# tooling environment is meant to be easy to use and adapt after forking your application

on:
  workflow_dispatch:
    inputs:
      golden_run:
        type: choice
        required: true
        default: 'Raise an error (default)'
        description: CI behavior if the test snapshots are different than expected.
        options:
          - 'Raise an error (default)'
          - 'Open a PR'
  push:
    branches:
      - master
      - main
      - develop
  pull_request:

jobs:
  build_application:
    name: Build application using the reusable workflow
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_build.yml@y333/manage_several_pytest_directories
    with:
      upload_app_binaries_artifact: "compiled_app_binaries"

  build_exchange:
    name: Build Exchange app using the reusable workflow
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_build.yml@y333/manage_several_pytest_directories
    with:
      app_repository: 'LedgerHQ/app-exchange'
      app_branch_name: 'develop'
      upload_app_binaries_artifact: "compiled_exchange_binaries"
      flags: 'TESTING=1 TEST_PUBLIC_KEY=1 TRUSTED_NAME_TEST_KEY=1 DEBUG=1'

  build_ethereum:
    name: Build Ethereum app using the reusable workflow
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_build.yml@y333/manage_several_pytest_directories
    with:
      app_repository: 'LedgerHQ/app-ethereum'
      app_branch_name: 'develop'
      upload_app_binaries_artifact: "compiled_ethereum_binaries"
      upload_as_lib_artifact: "ethereum_"
      flags: 'COIN=ethereum CHAIN=ethereum CAL_TEST_KEY=1 DOMAIN_NAME_TEST_KEY=1 SET_PLUGIN_TEST_KEY=1 NFT_TEST_KEY=1 TRUSTED_NAME_TEST_KEY=1'

  ragger_tests_standalone:
    name: Run standalone ragger tests using the reusable workflow
    needs: build_application
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_ragger_tests.yml@y333/manage_several_pytest_directories
    with:
      download_app_binaries_artifact: "compiled_app_binaries"
      regenerate_snapshots: ${{ inputs.golden_run == 'Open a PR' }}

  ragger_tests_swap:
    name: Run swap ragger tests using the reusable workflow
    needs: [build_application, build_exchange, build_ethereum]
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_ragger_tests.yml@y333/manage_several_pytest_directories
    with:
      download_app_binaries_artifact: "compiled_app_binaries"
      additional_app_binaries_artifact: "compiled_exchange_binaries"
      additional_app_binaries_artifact_dir: "tests/swap/main_app/exchange"
      lib_binaries_artifact: "compiled_ethereum_binaries"
