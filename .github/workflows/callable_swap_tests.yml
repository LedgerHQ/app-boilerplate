name: Callable Swap Functional tests

on:
  workflow_call:
    inputs:
      app_build_artifact:
        required: true
        type: string
      exchange_build_artifact:
        required: false
        default: ''
        description: 'If not provided, the workflow will build the Exchange app.'
        type: string
      ethereum_build_artifact:
        required: false
        default: ''
        description: 'If not provided, the workflow will build the Ethereum app.'
        type: string
      regenerate_snapshots:
        required: false
        default: false
        type: boolean
jobs:
  build_exchange:
    name: Build Exchange app using the reusable workflow
    if: ${{ inputs.exchange_build_artifact == '' }}
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_build.yml@y333/manage_several_pytest_directories
    with:
      app_repository: 'LedgerHQ/app-exchange'
      app_branch_name: 'develop'
      upload_app_binaries_artifact: "app_exchange_binaries"
      use_case: 'dbg_full_replay'

  build_ethereum:
    name: Build Ethereum app using the reusable workflow
    if: ${{ inputs.ethereum_build_artifact == '' }}
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_build.yml@y333/manage_several_pytest_directories
    with:
      app_repository: 'LedgerHQ/app-ethereum'
      app_branch_name: 'develop'
      upload_app_binaries_artifact: "app_ethereum_binaries"
      upload_as_lib_artifact: "ethereum_"
      use_case: 'use_test_keys'

  get_artifacts_names:
    name: Retrieve artifact names
    needs: [build_exchange, build_ethereum]
    if: ${{ always() }}
    outputs:
      exchange_build_artifact: ${{ steps.get_exchange_binaries.outputs.exchange_build_artifact }}
      ethereum_build_artifact: ${{ steps.get_ethereum_binaries.outputs.ethereum_build_artifact }}
    runs-on: ubuntu-latest
    steps:
      - name: Get Exchange binaries artifact name
        id: get_exchange_binaries
        run: |
          if needs.build_exchange.result == 'skipped'; then
            echo "exchange_build_artifact=${{ inputs.exchange_build_artifact }}" >> "$GITHUB_OUTPUT"
          elif needs.build_exchange.result == 'success'; then
            echo "exchange_build_artifact=app_exchange_binaries" >> "$GITHUB_OUTPUT"
          else
            echo "Not able to retrieve Exchange binaries artifact name" >&2
            exit 1
          fi
      - name: Get Ethereum binaries artifact name
        id: get_ethereum_binaries
        run: |
          if needs.build_ethereum.result == 'skipped'; then
            echo "ethereum_build_artifact=${{ inputs.ethereum_build_artifact }}" >> "$GITHUB_OUTPUT"
          elif needs.build_ethereum.result == 'success'; then
            echo "ethereum_build_artifact=app_ethereum_binaries" >> "$GITHUB_OUTPUT"
          else
            echo "Not able to retrieve Ethereum binaries artifact name" >&2
            exit 1
          fi
      - name: Show artifact names
        run: |
          echo "Exchange build artifact: ${{ steps.get_exchange_binaries.outputs.exchange_build_artifact }}"
          echo "Ethereum build artifact: ${{ steps.get_ethereum_binaries.outputs.ethereum_build_artifact }}"

  # This job runs the swap functional tests using the reusable workflow
  ragger_tests_swap:
    name: Run swap ragger tests using the reusable workflow
    needs: get_artifacts_names
    uses: LedgerHQ/ledger-app-workflows/.github/workflows/reusable_ragger_tests.yml@y333/manage_several_pytest_directories
    with:
      download_app_binaries_artifact: ${{ inputs.app_build_artifact }}
      additional_app_binaries_artifact: ${{ needs.get_artifacts_names.outputs.exchange_build_artifact }}
      additional_app_binaries_artifact_dir: "tests/swap/main_app/exchange/build"
      lib_binaries_artifact: ${{ needs.get_artifacts_names.outputs.ethereum_build_artifact }}
      test_dir: "tests/swap"
      regenerate_snapshots: ${{ inputs.regenerate_snapshots }}
