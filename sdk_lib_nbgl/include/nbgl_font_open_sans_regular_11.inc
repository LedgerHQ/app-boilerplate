#include "nbgl_fonts.h"

__attribute__ ((section("._nbgl_fonts_"))) const unsigned char bitmapOPEN_SANS_REGULAR_11PX_1BPP[] = {
//ascii 0x0020
//ascii 0x0021
  0x06, 0x11,
//ascii 0x0022
  0x02, 0x22, 0x20,
//ascii 0x0023
  0x21, 0x53, 0x21, 0x45, 0x31, 0x21, 0x35, 0x41,
  0x23, 0x51, 0x20,
//ascii 0x0024
  0x11, 0x33, 0x17, 0x11, 0x21, 0x21, 0x13, 0x31,
//ascii 0x0025
  0x36, 0x21, 0x31, 0x12, 0x13, 0x42, 0x43, 0x12,
  0x11, 0x31, 0x26, 0x30,
//ascii 0x0026
  0x42, 0x11, 0x61, 0x13, 0x21, 0x12, 0x22, 0x22,
  0x21, 0x31, 0x12, 0x14,
//ascii 0x0027
  0x02, 0x60,
//ascii 0x0028
  0x03, 0x43, 0x54, 0x50,
//ascii 0x0029
  0x34, 0x53, 0x43, 0x20,
//ascii 0x002A
  0x21, 0x71, 0x11, 0x52, 0x44, 0x61, 0x11, 0x51,
  0x50,
//ascii 0x002B
  0x41, 0x71, 0x63, 0x61, 0x71, 0x71, 0x30,
//ascii 0x002C
  0x32, 0x81, 0x20,
//ascii 0x002D
  0x11, 0x31, 0x20,
//ascii 0x002E
  0x31, 0x40,
//ascii 0x002F
  0x01, 0x83, 0x83, 0x81,
//ascii 0x0030
  0x16, 0x11, 0x62, 0x61, 0x16, 0x10,
//ascii 0x0031
  0x09, 0x81, 0x60,
//ascii 0x0032
  0x13, 0x32, 0x31, 0x22, 0x41, 0x12, 0x52,
//ascii 0x0033
  0x12, 0x13, 0x11, 0x21, 0x32, 0x21, 0x32, 0x61,
//ascii 0x0034
  0x51, 0x28, 0x11, 0x31, 0x41, 0x21, 0x53, 0x71,
  0x20,
//ascii 0x0035
  0x01, 0x24, 0x11, 0x21, 0x32, 0x21, 0x35, 0x31,
//ascii 0x0036
  0x01, 0x24, 0x11, 0x21, 0x32, 0x21, 0x31, 0x16,
  0x10,
//ascii 0x0037
  0x03, 0x51, 0x22, 0x31, 0x44, 0x70,
//ascii 0x0038
  0x12, 0x13, 0x11, 0x21, 0x32, 0x21, 0x31, 0x12,
  0x13, 0x10,
//ascii 0x0039
  0x16, 0x11, 0x31, 0x22, 0x31, 0x21, 0x14, 0x21,
//ascii 0x003A
  0x21, 0x41,
//ascii 0x003B
  0x21, 0x42, 0xC1, 0x20,
//ascii 0x003C
  0x11, 0x41, 0x31, 0x21, 0x52, 0x62, 0x30,
//ascii 0x003D
  0x31, 0x11, 0x51, 0x11, 0x51, 0x11, 0x51, 0x11,
  0x20,
//ascii 0x003E
  0x32, 0x62, 0x51, 0x21, 0x31, 0x41, 0x10,
//ascii 0x003F
  0x12, 0x51, 0x21, 0x41, 0x32, 0x12, 0x70,
//ascii 0x0040
  0x16, 0x51, 0x51, 0x51, 0x15, 0x11, 0x31, 0x11,
  0x31, 0x11, 0x31, 0x11, 0x31, 0x11, 0x31, 0x24,
  0x11, 0x41, 0x61, 0x56, 0x40,
//ascii 0x0041
  0x71, 0x43, 0x23, 0x11, 0x21, 0x41, 0x33, 0x11,
  0x63, 0x81,
//ascii 0x0042
  0x03, 0x15, 0x21, 0x32, 0x21, 0x32, 0x21, 0x39,
//ascii 0x0043
  0x01, 0x62, 0x62, 0x63, 0x42, 0x16, 0x10,
//ascii 0x0044
  0x16, 0x11, 0x62, 0x62, 0x62, 0x69,
//ascii 0x0045
  0x01, 0x21, 0x32, 0x21, 0x32, 0x21, 0x39,
//ascii 0x0046
  0x01, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31,
  0x38,
//ascii 0x0047
  0x01, 0x35, 0x31, 0x22, 0x62, 0x62, 0x61, 0x16,
  0x10,
//ascii 0x0048
  0x08, 0x31, 0x71, 0x71, 0x71, 0x48,
//ascii 0x0049
  0x08,
//ascii 0x004A
  0x09, 0xC1, 0xB1, 0x60,
//ascii 0x004B
  0x72, 0x51, 0x21, 0x31, 0x41, 0x11, 0x61, 0x48,
//ascii 0x004C
  0x71, 0x71, 0x71, 0x79,
//ascii 0x004D
  0x0B, 0x82, 0x83, 0x53, 0x32, 0x33, 0x58,
//ascii 0x004E
  0x08, 0x61, 0x52, 0x42, 0x51, 0x68,
//ascii 0x004F
  0x16, 0x11, 0x62, 0x62, 0x62, 0x62, 0x61, 0x16,
  0x10,
//ascii 0x0050
  0x13, 0x41, 0x31, 0x31, 0x31, 0x31, 0x31, 0x38,
//ascii 0x0051
  0x16, 0x51, 0x61, 0x11, 0x21, 0x62, 0x31, 0x61,
  0x41, 0x61, 0x41, 0x61, 0x56, 0x10,
//ascii 0x0052
  0x13, 0x23, 0x32, 0x21, 0x31, 0x31, 0x31, 0x38,
//ascii 0x0053
  0x01, 0x33, 0x11, 0x31, 0x22, 0x21, 0x31, 0x13,
  0x31,
//ascii 0x0054
  0x01, 0x71, 0x79, 0x71, 0x70,
//ascii 0x0055
  0x07, 0x81, 0x71, 0x71, 0x78, 0x10,
//ascii 0x0056
  0x01, 0x83, 0x83, 0x81, 0x43, 0x23, 0x41, 0x70,
//ascii 0x0057
  0x01, 0x85, 0x82, 0x33, 0x23, 0x53, 0x83, 0x82,
  0x15, 0x21, 0x70,
//ascii 0x0058
  0x01, 0x61, 0x11, 0x32, 0x33, 0x53, 0x41, 0x32,
  0x11, 0x61,
//ascii 0x0059
  0x01, 0x82, 0x85, 0x31, 0x52, 0x51, 0x70,
//ascii 0x005A
  0x02, 0x52, 0x12, 0x32, 0x31, 0x22, 0x43,
//ascii 0x005B
  0x01, 0x81, 0x21, 0x81, 0x2A, 0x60,
//ascii 0x005C
  0x71, 0x43, 0x23, 0x41, 0x70,
//ascii 0x005D
  0x0A, 0x21, 0x81, 0x21, 0x81, 0x60,
//ascii 0x005E
  0x41, 0x52, 0x42, 0x62, 0x82, 0x81, 0x30,
//ascii 0x005F
  0x11, 0x31, 0x31, 0x31, 0x31, 0x60,
//ascii 0x0060
  0x41, 0x61, 0x40,
//ascii 0x0061
  0x26, 0x21, 0x11, 0x21, 0x21, 0x11, 0x21, 0x21,
  0x14,
//ascii 0x0062
  0x34, 0x31, 0x41, 0x21, 0x41, 0x21, 0x49,
//ascii 0x0063
  0x21, 0x41, 0x21, 0x41, 0x21, 0x41, 0x34, 0x10,
//ascii 0x0064
  0x08, 0x21, 0x41, 0x21, 0x41, 0x21, 0x41, 0x34,
  0x10,
//ascii 0x0065
  0x23, 0x21, 0x21, 0x11, 0x21, 0x21, 0x11, 0x21,
  0x34, 0x10,
//ascii 0x0066
  0x01, 0x11, 0x51, 0x11, 0x67, 0x21, 0x50,
//ascii 0x0067
  0x21, 0x52, 0x43, 0x21, 0x21, 0x31, 0x21, 0x11,
  0x21, 0x31, 0x21, 0x11, 0x21, 0x36, 0x21, 0x92,
  0x20,
//ascii 0x0068
  0x35, 0x21, 0x71, 0x71, 0x58,
//ascii 0x0069
  0x01, 0x16,
//ascii 0x006A
  0x01, 0x19, 0xB1, 0xB1, 0x50,
//ascii 0x006B
  0x21, 0x32, 0x31, 0x11, 0x61, 0x38,
//ascii 0x006C
  0x08,
//ascii 0x006D
  0x26, 0x21, 0x71, 0x85, 0x21, 0x71, 0x71, 0x76,
//ascii 0x006E
  0x35, 0x21, 0x71, 0x71, 0x76,
//ascii 0x006F
  0x34, 0x31, 0x41, 0x21, 0x41, 0x21, 0x41, 0x34,
  0x10,
//ascii 0x0070
  0x34, 0x71, 0x41, 0x61, 0x41, 0x61, 0x41, 0x69,
  0x50,
//ascii 0x0071
  0x29, 0x31, 0x41, 0x61, 0x41, 0x61, 0x41, 0x74,
  0x10,
//ascii 0x0072
  0x21, 0x71, 0x76,
//ascii 0x0073
  0x61, 0x31, 0x21, 0x11, 0x21, 0x11, 0x21, 0x23,
  0x21,
//ascii 0x0074
  0x21, 0x41, 0x21, 0x41, 0x17, 0x21, 0x50,
//ascii 0x0075
  0x26, 0x71, 0x71, 0x71, 0x26,
//ascii 0x0076
  0x21, 0x83, 0x82, 0x62, 0x33, 0x41, 0x50,
//ascii 0x0077
  0x21, 0x83, 0x82, 0x33, 0x41, 0x83, 0x82, 0x33,
  0x41, 0x50,
//ascii 0x0078
  0x22, 0x22, 0x42, 0x62, 0x42, 0x22,
//ascii 0x0079
  0x21, 0xC3, 0xC2, 0xA4, 0x53, 0x41, 0x31, 0x71,
  0x10,
//ascii 0x007A
  0x21, 0x41, 0x22, 0x31, 0x21, 0x12, 0x11, 0x21,
  0x32, 0x21, 0x41,
//ascii 0x007B
  0x01, 0x81, 0x24, 0x24, 0x62, 0x20,
//ascii 0x007C
  0x0B, 0x50,
//ascii 0x007D
  0x42, 0x64, 0x24, 0x21, 0x81, 0x60,
//ascii 0x007E
  0x41, 0x71, 0x61, 0x71, 0x40,
};

 __attribute__ ((section("._nbgl_fonts_"))) const nbgl_font_character_t charactersOPEN_SANS_REGULAR_11PX_1BPP[95] = {
  {     0, 0,  4,0, 0, 0, 0 }, //asciii 0x0020
  {     0, 1,  4,2, 4, 1, 4 }, //asciii 0x0021
  {     2, 1,  5,2, 4, 1, 8 }, //asciii 0x0022
  {     5, 1,  8,1, 4, 0, 4 }, //asciii 0x0023
  {    16, 1,  7,2, 4, 1, 4 }, //asciii 0x0024
  {    24, 1, 10,2, 4, 1, 4 }, //asciii 0x0025
  {    36, 1, 10,2, 4, 2, 4 }, //asciii 0x0026
  {    48, 1,  3,2, 4, 0, 8 }, //asciii 0x0027
  {    50, 1,  4,1, 4, 1, 0 }, //asciii 0x0028
  {    54, 1,  4,2, 4, 0, 0 }, //asciii 0x0029
  {    58, 1,  7,1, 4, 0, 4 }, //asciii 0x002A
  {    67, 1,  7,1, 4, 0, 4 }, //asciii 0x002B
  {    74, 1,  4,1, 8, 1, 0 }, //asciii 0x002C
  {    77, 1,  5,2, 8, 1, 4 }, //asciii 0x002D
  {    80, 1,  4,2, 8, 1, 4 }, //asciii 0x002E
  {    82, 1,  5,1, 4, 0, 4 }, //asciii 0x002F
  {    86, 1,  7,2, 4, 1, 4 }, //asciii 0x0030
  {    92, 1,  7,2, 4, 2, 4 }, //asciii 0x0031
  {    95, 1,  7,2, 4, 1, 4 }, //asciii 0x0032
  {   102, 1,  7,2, 4, 1, 4 }, //asciii 0x0033
  {   110, 1,  9,2, 4, 1, 4 }, //asciii 0x0034
  {   119, 1,  7,2, 4, 1, 4 }, //asciii 0x0035
  {   127, 1,  7,2, 4, 1, 4 }, //asciii 0x0036
  {   136, 1,  7,2, 4, 1, 4 }, //asciii 0x0037
  {   142, 1,  7,2, 4, 1, 4 }, //asciii 0x0038
  {   152, 1,  7,2, 4, 1, 4 }, //asciii 0x0039
  {   160, 1,  4,2, 4, 1, 4 }, //asciii 0x003A
  {   162, 1,  4,1, 4, 1, 0 }, //asciii 0x003B
  {   166, 1,  7,2, 4, 1, 4 }, //asciii 0x003C
  {   173, 1,  7,2, 4, 1, 4 }, //asciii 0x003D
  {   182, 1,  7,2, 4, 1, 4 }, //asciii 0x003E
  {   189, 1,  6,2, 4, 0, 4 }, //asciii 0x003F
  {   196, 1, 11,2, 4, 1, 0 }, //asciii 0x0040
  {   217, 1,  8,1, 4, 0, 4 }, //asciii 0x0041
  {   227, 1,  8,2, 4, 1, 4 }, //asciii 0x0042
  {   235, 1,  8,2, 4, 1, 4 }, //asciii 0x0043
  {   242, 1,  9,2, 4, 1, 4 }, //asciii 0x0044
  {   248, 1,  7,2, 4, 1, 4 }, //asciii 0x0045
  {   255, 1,  7,2, 4, 0, 4 }, //asciii 0x0046
  {   264, 1,  9,2, 4, 1, 4 }, //asciii 0x0047
  {   273, 1,  9,2, 4, 1, 4 }, //asciii 0x0048
  {   279, 1,  4,2, 4, 1, 4 }, //asciii 0x0049
  {   280, 1,  4,0, 4, 1, 0 }, //asciii 0x004A
  {   284, 1,  8,2, 4, 0, 4 }, //asciii 0x004B
  {   292, 1,  7,2, 4, 0, 4 }, //asciii 0x004C
  {   296, 1, 11,2, 4, 1, 4 }, //asciii 0x004D
  {   303, 1,  9,2, 4, 1, 4 }, //asciii 0x004E
  {   309, 1, 10,2, 4, 1, 4 }, //asciii 0x004F
  {   318, 1,  8,2, 4, 1, 4 }, //asciii 0x0050
  {   326, 1, 10,2, 4, 1, 0 }, //asciii 0x0051
  {   340, 1,  8,2, 4, 1, 4 }, //asciii 0x0052
  {   348, 1,  7,2, 4, 1, 4 }, //asciii 0x0053
  {   357, 1,  8,2, 4, 1, 4 }, //asciii 0x0054
  {   362, 1,  9,2, 4, 1, 4 }, //asciii 0x0055
  {   368, 1,  8,1, 4, 0, 4 }, //asciii 0x0056
  {   376, 1, 11,1, 4, 0, 4 }, //asciii 0x0057
  {   387, 1,  8,1, 4, 1, 4 }, //asciii 0x0058
  {   397, 1,  7,1, 4, 0, 4 }, //asciii 0x0059
  {   404, 1,  7,2, 4, 1, 4 }, //asciii 0x005A
  {   411, 1,  5,2, 4, 0, 0 }, //asciii 0x005B
  {   417, 1,  5,1, 4, 0, 4 }, //asciii 0x005C
  {   422, 1,  5,1, 4, 1, 0 }, //asciii 0x005D
  {   428, 1,  7,1, 4, 0, 4 }, //asciii 0x005E
  {   435, 1,  6,0, 12, 1, 0 }, //asciii 0x005F
  {   441, 1,  7,3, 0, 2, 8 }, //asciii 0x0060
  {   444, 1,  7,2, 4, 1, 4 }, //asciii 0x0061
  {   453, 1,  8,2, 4, 1, 4 }, //asciii 0x0062
  {   460, 1,  6,2, 4, 0, 4 }, //asciii 0x0063
  {   468, 1,  8,2, 4, 1, 4 }, //asciii 0x0064
  {   477, 1,  7,2, 4, 1, 4 }, //asciii 0x0065
  {   487, 1,  6,1, 4, 1, 4 }, //asciii 0x0066
  {   494, 1,  7,1, 4, 0, 0 }, //asciii 0x0067
  {   511, 1,  8,2, 4, 1, 4 }, //asciii 0x0068
  {   516, 1,  4,2, 4, 1, 4 }, //asciii 0x0069
  {   518, 1,  4,0, 4, 1, 0 }, //asciii 0x006A
  {   523, 1,  7,2, 4, 1, 4 }, //asciii 0x006B
  {   529, 1,  4,2, 4, 1, 4 }, //asciii 0x006C
  {   530, 1, 11,2, 4, 1, 4 }, //asciii 0x006D
  {   538, 1,  8,2, 4, 1, 4 }, //asciii 0x006E
  {   543, 1,  8,2, 4, 1, 4 }, //asciii 0x006F
  {   552, 1,  8,2, 4, 1, 0 }, //asciii 0x0070
  {   561, 1,  8,2, 4, 1, 0 }, //asciii 0x0071
  {   570, 1,  5,2, 4, 0, 4 }, //asciii 0x0072
  {   573, 1,  6,2, 4, 0, 4 }, //asciii 0x0073
  {   582, 1,  5,1, 4, 0, 4 }, //asciii 0x0074
  {   589, 1,  8,2, 4, 1, 4 }, //asciii 0x0075
  {   594, 1,  7,1, 4, 0, 4 }, //asciii 0x0076
  {   601, 1, 10,1, 4, 0, 4 }, //asciii 0x0077
  {   611, 1,  7,2, 4, 1, 4 }, //asciii 0x0078
  {   617, 1,  7,1, 4, 0, 0 }, //asciii 0x0079
  {   626, 1,  6,1, 4, 0, 4 }, //asciii 0x007A
  {   637, 1,  5,2, 4, 0, 0 }, //asciii 0x007B
  {   643, 1,  7,4, 4, 2, 0 }, //asciii 0x007C
  {   645, 1,  5,1, 4, 1, 0 }, //asciii 0x007D
  {   651, 1,  7,2, 4, 1, 4 }, //asciii 0x007E
};

__attribute__ ((section("._nbgl_fonts_"))) const nbgl_font_t fontOPEN_SANS_REGULAR_11PX_1BPP= {
  656, // bitmap len
  BAGL_FONT_OPEN_SANS_REGULAR_11px_1bpp, // font id
  (uint8_t) NBGL_BPP_1, // bpp
  16, // height of all characters in pixels
  14, // line height in pixels
  1, // kerning
  1, // crop enabled (1) or not (0)
  0, // Most top Y coordinate of any char
  0x20, // first character
  0x7E, // last character
  charactersOPEN_SANS_REGULAR_11PX_1BPP,
  bitmapOPEN_SANS_REGULAR_11PX_1BPP
};
