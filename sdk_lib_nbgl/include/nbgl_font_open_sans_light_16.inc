#include "nbgl_fonts.h"

__attribute__ ((section("._nbgl_fonts_"))) const unsigned char bitmapOPEN_SANS_LIGHT_16PX_1BPP[] = {
//ascii 0x0020
//ascii 0x0021
  0x08, 0x22, 0x40,
//ascii 0x0022
  0x04, 0x84,
//ascii 0x0023
  0x41, 0xB1, 0x21, 0x45, 0x21, 0x86, 0x61, 0x21,
  0x24, 0x21, 0x21, 0x66, 0x81, 0x25, 0x41, 0x21,
  0xB1, 0x40,
//ascii 0x0024
  0x82, 0x71, 0x51, 0x21, 0x61, 0x42, 0x31, 0x4D,
  0x41, 0x41, 0x41, 0x61, 0x21, 0x51, 0x72, 0x51,
  0x50,
//ascii 0x0025
  0x65, 0x61, 0x52, 0x41, 0x51, 0x12, 0x35, 0x42,
  0xC2, 0xC2, 0x45, 0x32, 0x11, 0x51, 0x42, 0x51,
  0x65, 0x20,
//ascii 0x0026
  0x63, 0x21, 0x92, 0x91, 0x11, 0x23, 0x31, 0x32,
  0x31, 0x11, 0x42, 0x41, 0x52, 0x32, 0x51, 0x13,
  0x21, 0x32, 0x74, 0x50,
//ascii 0x0027
  0x04, 0x40,
//ascii 0x0028
  0x02, 0xB2, 0x3B, 0x30,
//ascii 0x0029
  0x2B, 0x32, 0xB2, 0x10,
//ascii 0x002A
  0x61, 0xB1, 0x21, 0x83, 0x64, 0xB3, 0x91, 0x21,
  0x81, 0x10,
//ascii 0x002B
  0x41, 0x71, 0x71, 0x47, 0x41, 0x71, 0x71, 0x30,
//ascii 0x002C
  0x23, 0x81, 0x20,
//ascii 0x002D
  0x31, 0x31, 0x31, 0x40,
//ascii 0x002E
  0x22, 0x22,
//ascii 0x002F
  0x01, 0xC3, 0xC4, 0xC3, 0xC1, 0x40,
//ascii 0x0030
  0x28, 0x31, 0x81, 0x11, 0xA2, 0xA2, 0xA1, 0x11,
  0x81, 0x38, 0x60,
//ascii 0x0031
  0x0C, 0x11, 0xC1, 0x50,
//ascii 0x0032
  0xB1, 0x15, 0x52, 0x51, 0x42, 0x61, 0x32, 0x71,
  0x22, 0x81, 0x11, 0x11, 0x82, 0x40,
//ascii 0x0033
  0x21, 0x43, 0x31, 0x12, 0x11, 0x31, 0x11, 0x32,
  0x52, 0x41, 0x52, 0x41, 0x52, 0x41, 0x51, 0x11,
  0x91, 0x40,
//ascii 0x0034
  0x81, 0xB1, 0x3C, 0x11, 0x61, 0x51, 0x51, 0x62,
  0x31, 0x81, 0x21, 0x93, 0xB1, 0x70,
//ascii 0x0035
  0x64, 0x21, 0x51, 0x31, 0x11, 0x41, 0x52, 0x41,
  0x52, 0x41, 0x55, 0x11, 0x51, 0x42, 0x41, 0x50,
//ascii 0x0036
  0x65, 0x11, 0x41, 0x52, 0x41, 0x52, 0x41, 0x51,
  0x11, 0x31, 0x51, 0x12, 0x31, 0x31, 0x47, 0x60,
//ascii 0x0037
  0x02, 0xA1, 0x13, 0x71, 0x42, 0x51, 0x63, 0x21,
  0x93, 0xB1, 0x70,
//ascii 0x0038
  0x22, 0x34, 0x21, 0x21, 0x11, 0x42, 0x41, 0x52,
  0x41, 0x52, 0x41, 0x51, 0x11, 0x21, 0x11, 0x41,
  0x22, 0x34, 0x50,
//ascii 0x0039
  0x27, 0x41, 0x31, 0x32, 0x11, 0x51, 0x31, 0x11,
  0x51, 0x42, 0x51, 0x42, 0x51, 0x41, 0x15, 0x20,
//ascii 0x003A
  0x32, 0x52, 0x32, 0x52,
//ascii 0x003B
  0x32, 0xE2, 0x53, 0x30,
//ascii 0x003C
  0x21, 0x51, 0x61, 0x31, 0x71, 0x31, 0x81, 0x11,
  0x91, 0x11, 0xA1, 0xB1, 0x20,
//ascii 0x003D
  0x01, 0x22, 0x22, 0x22, 0x22, 0x22, 0x22, 0x21,
  0x40,
//ascii 0x003E
  0x51, 0xB1, 0xA1, 0x11, 0x91, 0x11, 0x81, 0x31,
  0x71, 0x31, 0x61, 0x51, 0x70,
//ascii 0x003F
  0x14, 0x71, 0x41, 0x61, 0x51, 0x51, 0x62, 0x13,
  0x70,
//ascii 0x0040
  0x36, 0x91, 0x61, 0x71, 0x71, 0x61, 0x27, 0x61,
  0x21, 0x41, 0x41, 0x21, 0x21, 0x51, 0x31, 0x21,
  0x21, 0x51, 0x31, 0x21, 0x31, 0x41, 0x31, 0x31,
  0x34, 0x41, 0x31, 0xA1, 0x52, 0x71, 0x87, 0x50,
//ascii 0x0041
  0xB1, 0x83, 0x72, 0x73, 0x11, 0x43, 0x41, 0x43,
  0x41, 0x73, 0x11, 0xA2, 0xC3, 0xC1,
//ascii 0x0042
  0x22, 0x33, 0x31, 0x21, 0x11, 0x31, 0x11, 0x41,
  0x52, 0x41, 0x52, 0x41, 0x52, 0x41, 0x5D, 0x40,
//ascii 0x0043
  0x01, 0xA2, 0xA2, 0xA2, 0xA2, 0xA1, 0x11, 0x81,
  0x31, 0x61, 0x56, 0x30,
//ascii 0x0044
  0x36, 0x51, 0x61, 0x31, 0x81, 0x11, 0xA2, 0xA2,
  0xA2, 0xAD,
//ascii 0x0045
  0x01, 0x41, 0x52, 0x41, 0x52, 0x41, 0x52, 0x41,
  0x52, 0x41, 0x5D,
//ascii 0x0046
  0x01, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51,
  0x51, 0x51, 0x5C,
//ascii 0x0047
  0x65, 0x11, 0x51, 0x42, 0x51, 0x42, 0x51, 0x42,
  0x51, 0x42, 0xA2, 0xA1, 0x11, 0x81, 0x31, 0x61,
  0x56, 0x30,
//ascii 0x0048
  0x0C, 0x51, 0xB1, 0xB1, 0xB1, 0xB1, 0xB1, 0x6C,
//ascii 0x0049
  0x0C, 0x40,
//ascii 0x004A
  0x0E, 0xF0, 0x11, 0xF1, 0x10,
//ascii 0x004B
  0x01, 0xA1, 0x11, 0x81, 0x31, 0x52, 0x51, 0x31,
  0x81, 0x11, 0xA1, 0x6C, 0x40,
//ascii 0x004C
  0xB1, 0xB1, 0xB1, 0xB1, 0xBD,
//ascii 0x004D
  0x0C, 0x13, 0xC3, 0xC2, 0xC2, 0xA2, 0x82, 0x73,
  0x72, 0x8C,
//ascii 0x004E
  0x0C, 0x92, 0x91, 0x92, 0x91, 0x92, 0x82, 0x9C,
//ascii 0x004F
  0x36, 0x51, 0x61, 0x31, 0x81, 0x11, 0xA2, 0xA2,
  0xA2, 0xA1, 0x11, 0x81, 0x31, 0x61, 0x56, 0x30,
//ascii 0x0050
  0x15, 0x61, 0x51, 0x51, 0x51, 0x51, 0x51, 0x51,
  0x51, 0x5C,
//ascii 0x0051
  0x36, 0x91, 0x61, 0x41, 0x21, 0x81, 0x22, 0x11,
  0xA2, 0x31, 0xA1, 0x41, 0xA1, 0x41, 0xA1, 0x51,
  0x81, 0x71, 0x61, 0x96, 0x70,
//ascii 0x0052
  0x23, 0x52, 0x11, 0x31, 0x31, 0x21, 0x53, 0x31,
  0x51, 0x51, 0x51, 0x51, 0x51, 0x5C, 0x40,
//ascii 0x0053
  0x11, 0x54, 0x11, 0x51, 0x42, 0x51, 0x42, 0x41,
  0x52, 0x41, 0x52, 0x41, 0x51, 0x14, 0x61, 0x40,
//ascii 0x0054
  0x01, 0xB1, 0xB1, 0xBD, 0xB1, 0xB1, 0x70,
//ascii 0x0055
  0x0A, 0xC1, 0xC1, 0xB1, 0xB1, 0xB1, 0xA1, 0x1A,
  0x20,
//ascii 0x0056
  0x02, 0xC3, 0xC3, 0xC2, 0xC2, 0x82, 0x73, 0x63,
  0x72, 0x60,
//ascii 0x0057
  0x01, 0xC4, 0xC4, 0xC3, 0x74, 0x44, 0x53, 0x93,
  0xC4, 0xC4, 0xA3, 0x54, 0x44, 0x71, 0x30,
//ascii 0x0058
  0xB3, 0x81, 0x32, 0x42, 0x61, 0x12, 0x91, 0x92,
  0x12, 0x61, 0x52, 0x22, 0x81, 0xC1, 0x40,
//ascii 0x0059
  0x01, 0xC2, 0xC2, 0xC7, 0x52, 0x82, 0x82, 0x91,
  0x30,
//ascii 0x005A
  0x02, 0x92, 0x12, 0x72, 0x31, 0x62, 0x42, 0x42,
  0x61, 0x32, 0x72, 0x12, 0x92, 0x40,
//ascii 0x005B
  0x01, 0xD1, 0x11, 0xD1, 0x11, 0xD1, 0x1F, 0x10,
//ascii 0x005C
  0xB1, 0x83, 0x54, 0x53, 0x81, 0x70,
//ascii 0x005D
  0x0F, 0x11, 0xD1, 0x11, 0xD1, 0x11, 0xD1, 0x10,
//ascii 0x005E
  0x52, 0x42, 0x42, 0x51, 0x82, 0x82, 0x82, 0x10,
//ascii 0x005F
  0x11, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x60,
//ascii 0x0060
  0x51, 0x61, 0x61, 0x40,
//ascii 0x0061
  0x48, 0x31, 0x31, 0x21, 0x41, 0x31, 0x31, 0x31,
  0x31, 0x31, 0x31, 0x31, 0x31, 0x83, 0x10,
//ascii 0x0062
  0x95, 0xA1, 0x51, 0x81, 0x71, 0x71, 0x71, 0x71,
  0x71, 0x71, 0x71, 0x81, 0x51, 0x4D,
//ascii 0x0063
  0x31, 0x71, 0x31, 0x71, 0x31, 0x71, 0x31, 0x71,
  0x41, 0x51, 0x65, 0x20,
//ascii 0x0064
  0x3D, 0x81, 0x51, 0x81, 0x71, 0x71, 0x71, 0x71,
  0x71, 0x71, 0x71, 0x81, 0x51, 0xA5, 0x20,
//ascii 0x0065
  0x53, 0x21, 0x51, 0x21, 0x31, 0x31, 0x31, 0x31,
  0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x41, 0x21,
  0x21, 0x65, 0x60,
//ascii 0x0066
  0x31, 0xF1, 0x31, 0xB1, 0x31, 0xCC, 0x71, 0xF1,
//ascii 0x0067
  0x31, 0x91, 0x51, 0x12, 0x42, 0x11, 0x42, 0x22,
  0x21, 0x31, 0x31, 0x41, 0x21, 0x31, 0x31, 0x41,
  0x21, 0x31, 0x31, 0x42, 0x11, 0x31, 0x44, 0x21,
  0x11, 0x12, 0xD2, 0x10,
//ascii 0x0068
  0x97, 0x81, 0xE1, 0xF1, 0xF1, 0xF0, 0x11, 0xAD,
//ascii 0x0069
  0x11, 0x28, 0x40,
//ascii 0x006A
  0x11, 0x2C, 0xF1, 0xF1,
//ascii 0x006B
  0xF1, 0x71, 0x61, 0x91, 0x41, 0xB1, 0x21, 0xD2,
  0xF0, 0x11, 0x6D,
//ascii 0x006C
  0x3D,
//ascii 0x006D
  0x57, 0x41, 0xA1, 0xB1, 0xB1, 0xC8, 0x41, 0xA1,
  0xB1, 0xB1, 0xC1, 0xA9,
//ascii 0x006E
  0x57, 0x41, 0xA1, 0xB1, 0xB1, 0xC1, 0xA9, 0x40,
//ascii 0x006F
  0x55, 0x61, 0x51, 0x41, 0x71, 0x31, 0x71, 0x31,
  0x71, 0x41, 0x51, 0x65, 0x60,
//ascii 0x0070
  0x55, 0xA1, 0x51, 0x81, 0x71, 0x71, 0x71, 0x71,
  0x71, 0x71, 0x71, 0x81, 0x51, 0x8D,
//ascii 0x0071
  0x3D, 0x41, 0x51, 0x81, 0x71, 0x71, 0x71, 0x71,
  0x71, 0x71, 0x71, 0x81, 0x51, 0xA5, 0x60,
//ascii 0x0072
  0x31, 0xB1, 0xB1, 0xC1, 0xA9, 0x40,
//ascii 0x0073
  0x31, 0x43, 0x41, 0x31, 0x31, 0x31, 0x31, 0x31,
  0x31, 0x21, 0x41, 0x43, 0x41, 0x40,
//ascii 0x0074
  0xB1, 0x31, 0x71, 0x31, 0x71, 0x29, 0x41, 0x40,
//ascii 0x0075
  0x39, 0xA1, 0xC1, 0xB1, 0xB1, 0xA2, 0x37, 0x60,
//ascii 0x0076
  0x32, 0xC3, 0xC3, 0xC1, 0x83, 0x63, 0x72, 0x30,
//ascii 0x0077
  0x31, 0xC4, 0xC2, 0xB3, 0x63, 0x63, 0x93, 0xC3,
  0xC3, 0x82, 0x64, 0x71,
//ascii 0x0078
  0x32, 0x52, 0x51, 0x31, 0x83, 0x93, 0x81, 0x31,
  0x52, 0x52,
//ascii 0x0079
  0x32, 0xF0, 0x13, 0xF0, 0x13, 0xF0, 0x12, 0xB3,
  0x22, 0x63, 0x71, 0x32, 0xA1,
//ascii 0x007A
  0x32, 0x61, 0x31, 0x12, 0x41, 0x31, 0x31, 0x31,
  0x31, 0x42, 0x11, 0x31, 0x62, 0x40,
//ascii 0x007B
  0x01, 0xD1, 0x11, 0xD1, 0x26, 0x16, 0x91, 0xF1,
//ascii 0x007C
  0x3F, 0x02, 0x40,
//ascii 0x007D
  0x71, 0xF1, 0xA5, 0x15, 0x32, 0xB2, 0x11, 0xD1,
  0x10,
//ascii 0x007E
  0x21, 0x31, 0x31, 0x31, 0x21, 0x31, 0x31, 0x60,
};

 __attribute__ ((section("._nbgl_fonts_"))) const nbgl_font_character_t charactersOPEN_SANS_LIGHT_16PX_1BPP[95] = {
  {     0, 0,  6,0, 0, 0, 0 }, //asciii 0x0020
  {     0, 1,  5,3, 4, 1, 4 }, //asciii 0x0021
  {     3, 1,  8,3, 4, 1, 12 }, //asciii 0x0022
  {     5, 1, 12,2, 4, 0, 4 }, //asciii 0x0023
  {    23, 1, 11,3, 4, 1, 0 }, //asciii 0x0024
  {    40, 1, 15,3, 4, 1, 4 }, //asciii 0x0025
  {    58, 1, 13,3, 4, 1, 4 }, //asciii 0x0026
  {    78, 1,  5,3, 4, 1, 12 }, //asciii 0x0027
  {    80, 1,  6,3, 4, 1, 0 }, //asciii 0x0028
  {    84, 1,  6,3, 4, 1, 0 }, //asciii 0x0029
  {    88, 1, 11,3, 0, 1, 8 }, //asciii 0x002A
  {    98, 1, 11,3, 4, 1, 8 }, //asciii 0x002B
  {   106, 1,  5,2, 12, 1, 0 }, //asciii 0x002C
  {   109, 1,  7,3, 8, 1, 8 }, //asciii 0x002D
  {   113, 1,  6,3, 12, 1, 4 }, //asciii 0x002E
  {   115, 1,  8,2, 4, 1, 4 }, //asciii 0x002F
  {   121, 1, 11,3, 4, 1, 4 }, //asciii 0x0030
  {   132, 1, 11,4, 4, 4, 4 }, //asciii 0x0031
  {   136, 1, 11,3, 4, 1, 4 }, //asciii 0x0032
  {   150, 1, 11,3, 4, 1, 4 }, //asciii 0x0033
  {   168, 1, 11,2, 4, 0, 4 }, //asciii 0x0034
  {   182, 1, 11,3, 4, 1, 4 }, //asciii 0x0035
  {   198, 1, 11,3, 4, 1, 4 }, //asciii 0x0036
  {   214, 1, 11,3, 4, 1, 4 }, //asciii 0x0037
  {   225, 1, 11,3, 4, 1, 4 }, //asciii 0x0038
  {   244, 1, 11,3, 4, 1, 4 }, //asciii 0x0039
  {   260, 1,  6,3, 4, 1, 4 }, //asciii 0x003A
  {   264, 1,  6,3, 4, 1, 0 }, //asciii 0x003B
  {   268, 1, 11,3, 4, 1, 4 }, //asciii 0x003C
  {   281, 1, 11,3, 8, 1, 8 }, //asciii 0x003D
  {   290, 1, 11,3, 4, 1, 4 }, //asciii 0x003E
  {   303, 1,  9,3, 4, 1, 4 }, //asciii 0x003F
  {   312, 1, 13,0, 4, 1, 0 }, //asciii 0x0040
  {   344, 1, 12,2, 4, 0, 4 }, //asciii 0x0041
  {   358, 1, 12,4, 4, 1, 4 }, //asciii 0x0042
  {   374, 1, 12,3, 4, 1, 4 }, //asciii 0x0043
  {   386, 1, 13,4, 4, 1, 4 }, //asciii 0x0044
  {   396, 1, 11,4, 4, 1, 4 }, //asciii 0x0045
  {   407, 1, 10,4, 4, 0, 4 }, //asciii 0x0046
  {   418, 1, 14,3, 4, 1, 4 }, //asciii 0x0047
  {   436, 1, 14,4, 4, 2, 4 }, //asciii 0x0048
  {   444, 1,  6,4, 4, 1, 4 }, //asciii 0x0049
  {   446, 1,  6,0, 4, 3, 0 }, //asciii 0x004A
  {   451, 1, 11,4, 4, 0, 4 }, //asciii 0x004B
  {   464, 1, 10,4, 4, 0, 4 }, //asciii 0x004C
  {   469, 1, 14,2, 4, 2, 4 }, //asciii 0x004D
  {   479, 1, 14,4, 4, 2, 4 }, //asciii 0x004E
  {   487, 1, 14,3, 4, 1, 4 }, //asciii 0x004F
  {   503, 1, 11,4, 4, 1, 4 }, //asciii 0x0050
  {   513, 1, 14,3, 4, 1, 0 }, //asciii 0x0051
  {   534, 1, 12,4, 4, 1, 4 }, //asciii 0x0052
  {   549, 1, 11,3, 4, 1, 4 }, //asciii 0x0053
  {   565, 1,  9,2, 4, 0, 4 }, //asciii 0x0054
  {   572, 1, 14,4, 4, 2, 4 }, //asciii 0x0055
  {   581, 1, 12,2, 4, 1, 4 }, //asciii 0x0056
  {   591, 1, 15,1, 4, 0, 4 }, //asciii 0x0057
  {   606, 1, 11,2, 4, 0, 4 }, //asciii 0x0058
  {   621, 1, 11,2, 4, 1, 4 }, //asciii 0x0059
  {   630, 1, 11,3, 4, 1, 4 }, //asciii 0x005A
  {   644, 1,  7,3, 4, 0, 0 }, //asciii 0x005B
  {   652, 1,  8,2, 4, 1, 4 }, //asciii 0x005C
  {   658, 1,  7,2, 4, 1, 0 }, //asciii 0x005D
  {   666, 1, 11,3, 4, 1, 8 }, //asciii 0x005E
  {   674, 1,  9,1, 16, 1, 0 }, //asciii 0x005F
  {   682, 1, 11,5, 0, 3, 12 }, //asciii 0x0060
  {   686, 1, 10,3, 4, 1, 4 }, //asciii 0x0061
  {   701, 1, 12,3, 0, 1, 4 }, //asciii 0x0062
  {   715, 1, 10,3, 4, 1, 4 }, //asciii 0x0063
  {   727, 1, 12,3, 0, 1, 4 }, //asciii 0x0064
  {   742, 1, 11,3, 4, 1, 4 }, //asciii 0x0065
  {   761, 1,  8,2, 0, 0, 4 }, //asciii 0x0066
  {   769, 1, 10,2, 4, 0, 0 }, //asciii 0x0067
  {   797, 1, 11,3, 0, 1, 4 }, //asciii 0x0068
  {   805, 1,  6,3, 4, 2, 4 }, //asciii 0x0069
  {   808, 1,  7,2, 4, 2, 0 }, //asciii 0x006A
  {   812, 1, 10,3, 0, 0, 4 }, //asciii 0x006B
  {   823, 1,  6,3, 0, 2, 4 }, //asciii 0x006C
  {   824, 1, 14,1, 4, 1, 4 }, //asciii 0x006D
  {   836, 1, 11,3, 4, 1, 4 }, //asciii 0x006E
  {   844, 1, 11,3, 4, 1, 4 }, //asciii 0x006F
  {   857, 1, 12,3, 4, 1, 0 }, //asciii 0x0070
  {   871, 1, 12,3, 4, 1, 0 }, //asciii 0x0071
  {   886, 1,  8,3, 4, 0, 4 }, //asciii 0x0072
  {   892, 1,  9,3, 4, 1, 4 }, //asciii 0x0073
  {   906, 1,  7,2, 4, 0, 4 }, //asciii 0x0074
  {   914, 1, 11,3, 4, 1, 4 }, //asciii 0x0075
  {   922, 1, 10,2, 4, 1, 4 }, //asciii 0x0076
  {   930, 1, 14,2, 4, 0, 4 }, //asciii 0x0077
  {   942, 1, 10,3, 4, 1, 4 }, //asciii 0x0078
  {   952, 1, 10,2, 4, 1, 0 }, //asciii 0x0079
  {   965, 1,  9,3, 4, 1, 4 }, //asciii 0x007A
  {   979, 1,  8,2, 4, 1, 0 }, //asciii 0x007B
  {   987, 1,  8,3, 0, 4, 0 }, //asciii 0x007C
  {   990, 1,  8,3, 4, 0, 0 }, //asciii 0x007D
  {   999, 1, 11,3, 8, 1, 8 }, //asciii 0x007E
};

__attribute__ ((section("._nbgl_fonts_"))) const nbgl_font_t fontOPEN_SANS_LIGHT_16PX_1BPP= {
  1007, // bitmap len
  BAGL_FONT_OPEN_SANS_LIGHT_16px_1bpp, // font id
  (uint8_t) NBGL_BPP_1, // bpp
  24, // height of all characters in pixels
  21, // line height in pixels
  2, // kerning
  1, // crop enabled (1) or not (0)
  4, // Most top Y coordinate of any char
  0x20, // first character
  0x7E, // last character
  charactersOPEN_SANS_LIGHT_16PX_1BPP,
  bitmapOPEN_SANS_LIGHT_16PX_1BPP
};
